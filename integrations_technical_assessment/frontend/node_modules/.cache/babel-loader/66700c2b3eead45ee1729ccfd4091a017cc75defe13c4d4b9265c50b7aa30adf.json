{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bharg\\\\Downloads\\\\automations_technical_assessment\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\n// frontend/src/integrations/hubspot.js\n\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HubspotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  useEffect(() => {\n    // optionally set isConnected from integrationParams\n    if (integrationParams && integrationParams.hubspot) {\n      setIsConnected(true);\n    }\n  }, [integrationParams]);\n  const openOAuthPopup = () => {\n    setIsConnecting(true);\n    const width = 600,\n      height = 700;\n    const left = window.screen.width / 2 - width / 2;\n    const top = window.screen.height / 2 - height / 2;\n    const popup = window.open('', 'hubspot_oauth', `width=${width},height=${height},top=${top},left=${left}`);\n    const formData = new FormData();\n    formData.append('user_id', (user === null || user === void 0 ? void 0 : user.id) || '');\n    formData.append('org_id', (org === null || org === void 0 ? void 0 : org.id) || '');\n    axios.post('http://localhost:8000/integrations/hubspot/authorize', formData, {\n      responseType: 'text'\n    }).then(response => {\n      if (popup) {\n        popup.document.open();\n        popup.document.write(response.data);\n        popup.document.close();\n      }\n      pollForCredentials();\n    }).catch(err => {\n      console.error('Authorize error', err);\n      setIsConnecting(false);\n    });\n  };\n  const pollForCredentials = async () => {\n    let attempts = 0;\n    const maxAttempts = 15;\n    const intervalMs = 1000;\n    const tryFetch = async () => {\n      attempts += 1;\n      const formData = new FormData();\n      formData.append('user_id', (user === null || user === void 0 ? void 0 : user.id) || '');\n      formData.append('org_id', (org === null || org === void 0 ? void 0 : org.id) || '');\n      try {\n        const resp = await axios.post('http://localhost:8000/integrations/hubspot/credentials', formData);\n        if (resp.data && resp.data.access_token) {\n          setIntegrationParams({\n            ...integrationParams,\n            hubspot: resp.data\n          });\n          setIsConnected(true);\n          setIsConnecting(false);\n          return;\n        }\n      } catch (e) {\n        // credentials not available yet\n      }\n      if (attempts < maxAttempts) {\n        setTimeout(tryFetch, intervalMs);\n      } else {\n        setIsConnecting(false);\n      }\n    };\n    setTimeout(tryFetch, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    p: 1,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 600\n        },\n        children: \"HubSpot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 12,\n          color: '#666'\n        },\n        children: \"Connect HubSpot to import contacts/deals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: openOAuthPopup,\n        disabled: isConnecting || isConnected,\n        style: {\n          pointerEvents: isConnected ? 'none' : 'auto',\n          cursor: isConnected ? 'default' : 'pointer',\n          opacity: isConnected ? 1 : undefined\n        },\n        children: isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }, this) : isConnected ? 'HubSpot Connected' : 'Connect to HubSpot'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(HubspotIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = HubspotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubspotIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","HubspotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","hubspot","openOAuthPopup","width","height","left","window","screen","top","popup","open","formData","FormData","append","id","post","responseType","then","response","document","write","data","close","pollForCredentials","catch","err","console","error","attempts","maxAttempts","intervalMs","tryFetch","resp","access_token","e","setTimeout","display","alignItems","justifyContent","p","children","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","variant","onClick","disabled","pointerEvents","cursor","opacity","undefined","size","_c","$RefreshReg$"],"sources":["C:/Users/bharg/Downloads/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/hubspot.js"],"sourcesContent":["// frontend/src/integrations/hubspot.js\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    CircularProgress\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nexport const HubspotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // optionally set isConnected from integrationParams\r\n        if (integrationParams && integrationParams.hubspot) {\r\n            setIsConnected(true);\r\n        }\r\n    }, [integrationParams]);\r\n\r\n    const openOAuthPopup = () => {\r\n        setIsConnecting(true);\r\n        const width = 600, height = 700;\r\n        const left = (window.screen.width / 2) - (width / 2);\r\n        const top = (window.screen.height / 2) - (height / 2);\r\n        const popup = window.open('', 'hubspot_oauth', `width=${width},height=${height},top=${top},left=${left}`);\r\n\r\n        const formData = new FormData();\r\n        formData.append('user_id', user?.id || '');\r\n        formData.append('org_id', org?.id || '');\r\n\r\n        axios.post('http://localhost:8000/integrations/hubspot/authorize', formData, { responseType: 'text' })\r\n            .then((response) => {\r\n                if (popup) {\r\n                    popup.document.open();\r\n                    popup.document.write(response.data);\r\n                    popup.document.close();\r\n                }\r\n                pollForCredentials();\r\n            })\r\n            .catch((err) => {\r\n                console.error('Authorize error', err);\r\n                setIsConnecting(false);\r\n            });\r\n    };\r\n\r\n    const pollForCredentials = async () => {\r\n        let attempts = 0;\r\n        const maxAttempts = 15;\r\n        const intervalMs = 1000;\r\n\r\n        const tryFetch = async () => {\r\n            attempts += 1;\r\n            const formData = new FormData();\r\n            formData.append('user_id', user?.id || '');\r\n            formData.append('org_id', org?.id || '');\r\n            try {\r\n                const resp = await axios.post('http://localhost:8000/integrations/hubspot/credentials', formData);\r\n                if (resp.data && resp.data.access_token) {\r\n                    setIntegrationParams({\r\n                        ...integrationParams,\r\n                        hubspot: resp.data\r\n                    });\r\n                    setIsConnected(true);\r\n                    setIsConnecting(false);\r\n                    return;\r\n                }\r\n            } catch (e) {\r\n                // credentials not available yet\r\n            }\r\n            if (attempts < maxAttempts) {\r\n                setTimeout(tryFetch, intervalMs);\r\n            } else {\r\n                setIsConnecting(false);\r\n            }\r\n        };\r\n        setTimeout(tryFetch, 1000);\r\n    };\r\n\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" p={1}>\r\n            <div>\r\n                <div style={{fontWeight: 600}}>HubSpot</div>\r\n                <div style={{fontSize: 12, color: '#666'}}>Connect HubSpot to import contacts/deals</div>\r\n            </div>\r\n            <Box>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    onClick={openOAuthPopup}\r\n                    disabled={isConnecting || isConnected}\r\n                    style={{\r\n                        pointerEvents: isConnected ? 'none' : 'auto',\r\n                        cursor: isConnected ? 'default' : 'pointer',\r\n                        opacity: isConnected ? 1 : undefined\r\n                    }}\r\n                >\r\n                    {isConnecting ? <CircularProgress size={20} /> : isConnected ? 'HubSpot Connected' : 'Connect to HubSpot'}\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}